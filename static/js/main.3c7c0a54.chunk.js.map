{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","newGood","setState","removeGood","goodToRemove","filter","good","clearGoods","getDisplayingGoods","length","slice","join","this","goodsToDisplay","className","type","onClick","map","isGoodSelected","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,6CACA,mDACA,mDACA,+DACA,mDACA,yDACA,uCACA,uCACA,yDACA,0DAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,qD,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAK5CE,WAAa,SAACC,GACZ,EAAKF,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcM,QACjC,SAACC,GAAD,OAAUA,IAASF,U,EAMzBG,WAAa,kBACX,EAAKL,SAAS,CAAEH,cAAe,M,EAGjCS,mBAAqB,WACnB,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,kGACT,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,2FACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,mBAAgCA,EAAc,GAA9C,2FACF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,mBAAqDZ,EAAcW,OAAO,GAA1E,6F,4CAIN,WAAU,IAAD,OACCX,EAAkBa,KAAKd,MAAvBC,cAEFc,EAAiBD,KAAKJ,qBAE5B,OACE,qBAAKM,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAIA,UAAU,aAAd,yGAEE,uBACA,sBAAMA,UAAU,qBAAhB,SACGD,OAGJd,EAAcU,OAAS,GACtB,wBACEK,UAAU,iCACVC,KAAK,SACLC,QAASJ,KAAKL,WAHhB,kBAUJ,oBAAIO,UAAU,YAAd,SACGlB,EAAgBqB,KAAI,SAACX,GACpB,IAAMY,EAAiBnB,EAAcoB,SAASb,GAE9C,OACE,qBAAeQ,UAAU,YAAzB,UACGR,EACAY,EACC,wBACEJ,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAM,EAAKb,WAAWG,IAHjC,oBAQA,wBACEQ,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAM,EAAKhB,QAAQM,IAH9B,mBAXKA,iB,GAxEPc,IAAMC,WAqGTxB,ICtHfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c7c0a54.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Булочка',\n  'Вафелька',\n  'Пряничек',\n  'Пампушечка',\n  'Печенька',\n  'Пирожочек',\n  'Бублик',\n  'Пончик',\n  'Пироженка',\n  'Кренделёк',\n];\n\ninterface State {\n  selectedGoods: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Вафелька'],\n  };\n\n  addGood = (newGood: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, newGood],\n    }\n    ));\n  };\n\n  removeGood = (goodToRemove: string) => {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter(\n        (good) => good !== goodToRemove,\n      ),\n    }\n    ));\n  };\n\n  clearGoods = () => (\n    this.setState({ selectedGoods: [] })\n  );\n\n  getDisplayingGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'Ничего не выбрано ;(';\n      case 1:\n        return `${selectedGoods[0]} в вашей корзинке`;\n      case 2:\n        return `${selectedGoods[0]} и ${selectedGoods[1]} в вашей корзинке`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} и ${selectedGoods.slice(-1)} в вашей корзинке`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    const goodsToDisplay = this.getDisplayingGoods();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__container\">\n          <div className=\"App__titleInfo\">\n            <h1 className=\"App__title\">\n              Выбранные штучки:\n              <br />\n              <span className=\"App__selectedItems\">\n                {goodsToDisplay}\n              </span>\n            </h1>\n            {selectedGoods.length > 0 && (\n              <button\n                className=\"App__button App__button--clear\"\n                type=\"button\"\n                onClick={this.clearGoods}\n              >\n                X\n              </button>\n            )}\n          </div>\n\n          <ul className=\"App__list\">\n            {goodsFromServer.map((good) => {\n              const isGoodSelected = selectedGoods.includes(good);\n\n              return (\n                <li key={good} className=\"App__item\">\n                  {good}\n                  {isGoodSelected ? (\n                    <button\n                      className=\"App__button\"\n                      type=\"button\"\n                      onClick={() => this.removeGood(good)}\n                    >\n                      Remove\n                    </button>\n                  ) : (\n                    <button\n                      className=\"App__button\"\n                      type=\"button\"\n                      onClick={() => this.addGood(good)}\n                    >\n                      Add\n                    </button>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}